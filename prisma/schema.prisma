generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  STUDENT
  PYME
}

model UserProfile {
  id        String   @id @default(cuid())
  userId    String   @unique      
  role      Role
  createdAt DateTime @default(now())

  student   Student? // <== Inverso
}

model Pyme {
  id          String   @id @default(uuid())
  userId      String   @unique     
  name        String
  contact     String
  description String
  website     String?
  location    String?
  logoUrl     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  projects    Project[]
}

model Project {
  id          String   @id @default(uuid())
  userId      String               
  pymeId      String?              
  title       String
  description String?
  skills      String
  imageUrl    String?
  isPublished Boolean  @default(false)
  level       String?
  startDate   DateTime?
  endDate     DateTime?
  category    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  pyme        Pyme?    @relation(fields: [pymeId], references: [id])
  applications Application[] // <== Inverso
}

model Application {
  id         String    @id @default(cuid())
  student    Student   @relation(fields: [studentId], references: [id])
  studentId  String
  project    Project   @relation(fields: [projectId], references: [id])
  projectId  String
  createdAt  DateTime  @default(now())
  status     String    @default("pending")
}

model Student {
  id          String       @id @default(cuid())
  userProfile UserProfile  @relation(fields: [userId], references: [id])
  userId      String       @unique
  fullName    String
  email       String
  education   String?
  skills      String?
  language    String?
  linkedIn    String?
  createdAt   DateTime     @default(now())
  applications Application[]
}
